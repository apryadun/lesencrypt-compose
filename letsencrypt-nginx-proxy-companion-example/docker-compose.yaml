version: '2'
services:
  nginx:
    restart: always
    image: nginx
    container_name: nginx
    networks:
      - vpc
      - sample-service_vpc
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/conf.d"
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "./data/certs:/etc/nginx/certs:ro"
  nginx-gen:
    restart: always
    image: jwilder/docker-gen
    container_name: nginx-gen
    networks:
      - vpc
      - sample-service_vpc
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./data/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
  letsencrypt-nginx-proxy-companion:
    restart: always
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    networks:
      - vpc
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen
networks:
  vpc:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
  sample-service_vpc:
    external: true